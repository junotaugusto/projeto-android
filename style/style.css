@charset "UTF-8";

@import url('https://fonts.googleapis.com/css2?family=Bebas+Neue&family=Sacramento&display=swap');

@font-face {
    font-family: 'Idroid';
    src: url(../droidfont/IDroid.otf) format('opentype');
    font-weight: normal;
}
        

/*Escala de cores monocromática utilizada no site, do mais claro para o mais escuro:
#c5ebd6 
#83e1ad
#3ddc84
#2fa866
#1a5c37
#063d1e
*/

/*Raíz do documento, ou seja, tudo o que estiver aqui vai servir para o documento inteiro. Por isso, eu posso criar variáveis dentro de root. 

Todas as variáveis em CSS começam com dois traços e o nome da variável seguido de dois pontos e o ponto e vírgula no final.

Uma variável ajuda muito na hora de desenvolver o site. Por exemplo, uma variável intitulada "cores-titulos-1" que dá cor a todos <h1>. Se um cliente pede para trocar essa cor, basta alterar a cor na variável e, em todo lugar que aquela variável for aplicada, será alterado automaticamente, sem precisar ir seletor por seletor, alterando no documento.
*/
:root { 
    --cor0: #c5ebd6; 
    --cor1: #83e1ad;
    --cor2: #3ddc84; 
    --cor3: #2fa866;
    --cor4: #1a5c37;
    --cor5: #063d1e;

    --fonte-padrao: Arial, Verdana, Helvetica, sans-serif;
    --fonte-destaque: 'Bebas Neue', cursive;
    --fonte-droid: 'Idroid';

} 
/*O seletor de asterísco irá configurar tudo no site. No caso, o Guanabara retirou a margem de todos os seletores para poder configurar depois*/
* { 
    margin: 0px;
    padding: 0px;
}


body {
    background-color: var(--cor0);
    font-family: var(--fonte-padrao);
}

a.externo::after { /*After de depois do link vai entrar o que tiver entre chaves*/
    content: '\00A0\1F517';
}

header {
    background-image: linear-gradient(to bottom, var(--cor3), var(--cor4), var(--cor5));
    min-height: 150px;
    text-align: center;
    padding-top: 35px;
}

header > p {
    color: white;
    font-family: var(--fonte-padrao);
    font-size: 1.2em;
    max-width: 500px;
    min-width: 50%;
    margin: auto;
    text-shadow: 2px 2px 0px rgba(0, 0, 0, 0.267);

}

header > h1 {
    color: white;
    font-family: var(--fonte-destaque);
    font-size: 3em;
    font-weight: normal;
    margin-bottom: 20px;
    text-shadow: 2px 2px 0px rgba(0, 0, 0, 0.267);

}

nav {
    background-color: var(--cor5);
    padding-bottom: 10px;
    box-shadow: 1px 7px 7px rgba(0, 0, 0, 0.192);
    text-align: center;
    width: 100%;
}

nav > a{
    text-decoration: none;
    padding: 10px;
    color: white;
}

nav > a:hover {

    color: var(--cor0);
    font-weight: bold;
    background-color: var(--cor3);
    transition: 0.2s;
    border-radius: 10px;
}

main {

    background-color: white;
    min-width: 300px;
    max-width: 1000px;
    margin: auto;
    margin-bottom: 30px;
    padding: 20px;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.418);
    border-radius: 0px 0px 20px 20px;
}

main h1{
    font-family: var(--fonte-droid);
    color: var(--cor5);
    font-weight: normal;
    font-size: 1.8em;
}

main h2{
    font-family: var(--fonte-droid);
    color: var(--cor0);
    background-image: linear-gradient(to right, var(--cor5), transparent);
    font-size: 1.3em;
    font-weight: normal;
    padding: 5px;
    border-radius: 4px;
}

main img {
    width: 100%;
}

main img.pequena {
    max-width: 350px; /**/
    display: block;
    margin: auto;
}

main p {
    text-align: justify;
    margin: 15px 0px 15px 0px;
    text-indent: 25px;
    line-height: 1.5em;
    font-size: 1.09em;
}

main strong {
    color: var(--cor4);
    font-weight: bold;
    padding: 2px 6px;
    border-radius: 5px;
}

main strong:hover {
    color: var(--cor1);
    font-weight: bold;
    background-color: var(--cor4);
    padding: 2px 6px;
    border-radius: 5px;
    transition: 0.3s;
}

main a {
    text-decoration: none;
    font-weight: bold;
    color: var(--cor5);
    background-color: var(--cor1);
    padding: 2px 6px;
    border-radius: 5px;
}

main a:hover {
    text-decoration: underline;
    color: white;
    text-shadow: 2px 2px 6px rgba(0, 0, 0, 0.627);
}

aside {
    background-color: var(--cor1);
    padding: 10px;
    border-radius: 10px;
    box-shadow: 2px 4px 9px rgb(0 0 0 / 26%);
}

aside > ul {
    list-style-type: '✅\00A0'; /*Não esquecer das aspas. O código pode ser visto no site emojipedia. O \00A0 é o &nbsp */
    list-style-position: inside; /*Por padrão as bolinhas ficam fora da caixa*/
    columns: 2; /*Divide a lista em duas colunas :oD. Cuidado quando "espremer"o site.*/
    text-decoration: none;
}

aside h3 {

    background-color: var(--cor4);
    color: white;
    font-size: bold;
    padding: 10px;
    margin: -10px -10px 0px -10px;
    border-radius: 10px 10px 0px 0px;
}



footer {
    background-color: var(--cor5);
    color: white;
    text-align: center;
    padding: 5px;
}

footer a {
    text-decoration: none;
    color: var(--cor2);
    font-size: bold;
}

footer a:hover {
    text-decoration: underline;
    color: white;
    background-color: var(--cor2);
    text-shadow: 2px 2px 6px rgba(0, 0, 0, 0.627);
}

div.video { /*Tudo o que é div da classe video: */
    background-color: var(--cor5);
    margin: 0px -20px 30px -20px;
    padding: 20px;
    padding-bottom: 56.39%;
    position: relative;
}

div.video > iframe {
    position: absolute;
    top: 5%;
    left: 5%;
    width: 90%;
    height: 90%;
}

div::before {
    
}

/*SOBRE O VIDEO:
Normalmente quando puxamos um video de uma plataforma, ele vem com as configurações da própria plataforma.
- Envelopamos o video em uma div.
- Criou uma classe chamada 'video'. Na classe, fez as seguintes configurações:
    - Tirou 20px das margens laterais pra div colar no body.
    - Colocou a posição, dentro da div, como 'relative'.
    - Colocou a posição, dentro do iframe que tava dentro da div com a posição 'absolute'. */